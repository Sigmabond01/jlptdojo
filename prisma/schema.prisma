// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(cuid())
  name        String?
  email       String?  @unique
  emailVerified DateTime?
  image        String?
  accounts      Account[]
  sessions      Session[]
  vocabularyProgress   VocabularyProgress[]
  grammarProgress       GrammarProgress[]
  kanjiProgress         KanjiProgress[]
}

model Session {
  id        String      @id @default(cuid())
  sessionToken String  @unique
  userId      String
  expires     DateTime
  user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier      String
  token           String    @unique
  expires         DateTime

  @@unique([identifier, token])
}

model Account {
  id              String @id @default(cuid())
  userId          String
  type            String
  provider        String
  providerAccountId String
  refresh_token    String? @db.Text
  access_token     String? @db.Text
  expires_at       Int?
  token_type       String?
  scope            String?
  id_token         String? @db.Text
  session_state    String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

enum JlptLevel {
  N5
  N4
}

model Vocabulary {
  id          String    @id @default(cuid())
  level       JlptLevel
  japanese     String
  reading      String
  meaning       String
  example       String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  progress      VocabularyProgress[]
}

model Grammar {
  id          String    @id @default(cuid())
  level       JlptLevel
  structure     String
  meaning       String
  explanation   String?
  example       String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  progress      GrammarProgress[]
}

model Kanji {
  id          String    @id @default(cuid())
  level       JlptLevel
  character     String  @unique
  reading       String?
  meaning      String
  onYomi       String
  kunYomi       String
  strokeCount   Int
  example       String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  progress      KanjiProgress[]
}

model VocabularyProgress {
  id        String   @id @default(cuid())
  userId    String
  vocabularyId String
  completedAt DateTime  @default(now())

  user    User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  vocabulary    Vocabulary  @relation(fields: [vocabularyId], references: [id], onDelete: Cascade)

  @@unique([userId, vocabularyId])
}

model GrammarProgress {
  id        String   @id @default(cuid())
  userId    String
  grammarId String
  completedAt DateTime  @default(now())

  user    User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  grammar  Grammar  @relation(fields: [grammarId], references: [id], onDelete: Cascade)

  @@unique([userId, grammarId])
}

model KanjiProgress {
  id        String   @id @default(cuid())
  userId    String
  kanjiId String
  completedAt DateTime  @default(now())

  user    User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  kanji    Kanji  @relation(fields: [kanjiId], references: [id], onDelete: Cascade)

  @@unique([userId, kanjiId])
}